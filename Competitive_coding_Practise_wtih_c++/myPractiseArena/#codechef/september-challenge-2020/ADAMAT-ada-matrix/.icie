{"task_url":"https://www.codechef.com/SEPT20B/problems/ADAMAT","statement":{"HTML":{"html":"\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css\">\n\t\t<script type=\"text/x-mathjax-config\">\n\t\t\tMathJax.Hub.Config({\n\t\t\t\ttex2jax: {inlineMath: [['$','$']]}\n\t\t\t});\n\t\t</script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n\t\t<style>\n\t\t\t.markdown-body {\n\t\t\t\tbackground-color: white;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t}\n\t\t\t.markdown-body code {\n\t\t\t\tcolor: #24292e;\n\t\t\t}\n\t\t\t.solution-visible-txt {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body class=\"markdown-body\">\n\t\t<h1>Ada Matrix</h1>\n<h3>Read problem statements in <a href=\"http://www.codechef.com/download/translated/SEPT20/hindi/ADAMAT.pdf\">Hindi</a>, <a href=\"http://www.codechef.com/download/translated/SEPT20/bengali/ADAMAT.pdf\">Bengali</a>, <a href=\"http://www.codechef.com/download/translated/SEPT20/mandarin/ADAMAT.pdf\">Mandarin Chinese</a>, <a href=\"http://www.codechef.com/download/translated/SEPT20/russian/ADAMAT.pdf\">Russian</a>, and <a href=\"http://www.codechef.com/download/translated/SEPT20/vietnamese/ADAMAT.pdf\">Vietnamese</a> as well.</h3>\n<p>Chef Ada has a matrix with $N$ rows (numbered $1$ through $N$ from top to bottom) and $N$ columns (numbered $1$ through $N$ from left to right) containing all integers between $1$ and $N^2$ inclusive. For each valid $i$ and $j$, let's denote the cell in the $i$-th row and $j$-th column by $(i,j)$.</p>\n<p>Ada wants to sort the matrix in row-major order ― for each valid $i$ and $j$, she wants the cell $(i, j)$ to contain the value $(i-1) \\cdot N + j$.</p>\n<p>In one operation, Ada should choose an integer $L$ and <a href=\"https://en.wikipedia.org/wiki/Transpose\">transpose</a> the submatrix between rows $1$ and $L$ and columns $1$ and $L$ (inclusive). Formally, for each $i$ and $j$ ($1 \\le i, j \\le L$), the value in the cell $(i, j)$ after this operation is equal to the value in $(j, i)$ before it.</p>\n<p>The initial state of the matrix is chosen in such a way that it is possible to sort it using a finite number of operations (possibly zero). Find the smallest number of operations required to sort the matrix.</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.</li>\n<li>The first line of each test case contains a single integer $N$.</li>\n<li>The next $N$ lines describe the matrix. For each valid $i$, the $i$-th of these lines contains $N$ space-separated integers ― the initial values in cells $(i, 1), (i, 2), \\ldots, (i, N)$.</li>\n</ul>\n<h3>Output</h3>\n<p>For each test case, print a single line containing one integer ― the smallest number of operations required to sort the matrix.</p>\n<h3>Constraints</h3>\n<ul>\n<li>$4 \\le N \\le 64$</li>\n<li>the sum of $N^2$ over all test files does not exceed $3 \\cdot 10^5$</li>\n</ul>\n<h3>Subtasks</h3>\n<p><strong>Subtask #1 (10 points):</strong></p>\n<ul>\n<li>$T \\le 50$</li>\n<li>$N = 4$</li>\n</ul>\n<p><strong>Subtask #2 (90 points):</strong> original constraints</p>\n<h3>Example Input</h3>\n<pre><code>1\n4\n1 2 9 13\n5 6 10 14\n3 7 11 15\n4 8 12 16\n</code></pre>\n<h3>Example Output</h3>\n<pre><code>2\n</code></pre>\n<h3>Explanation</h3>\n<p><strong>Example case 1:</strong> After the first operation, with $L = 2$, the resulting matrix is</p>\n<pre><code>1 5 9 13\n2 6 10 14\n3 7 11 15\n4 8 12 16\n</code></pre>\n<p>After the second operation, with $L = 4$, the matrix becomes sorted</p>\n<pre><code>1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n</code></pre>\n\n\t<body>\n</html>"}}}