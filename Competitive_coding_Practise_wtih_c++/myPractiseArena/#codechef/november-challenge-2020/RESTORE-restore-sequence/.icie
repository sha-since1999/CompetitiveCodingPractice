{"task_url":"https://www.codechef.com/NOV20B/problems/RESTORE","statement":{"HTML":{"html":"\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css\">\n\t\t<script type=\"text/x-mathjax-config\">\n\t\t\tMathJax.Hub.Config({\n\t\t\t\ttex2jax: {inlineMath: [['$','$']]}\n\t\t\t});\n\t\t</script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n\t\t<style>\n\t\t\t.markdown-body {\n\t\t\t\tbackground-color: white;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t}\n\t\t\t.markdown-body code {\n\t\t\t\tcolor: #24292e;\n\t\t\t}\n\t\t\t.solution-visible-txt {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body class=\"markdown-body\">\n\t\t<h1>Restore Sequence</h1>\n<h3>Read problem statements in <a href=\"http://www.codechef.com/download/translated/NOV20/hindi/RESTORE.pdf\">Hindi</a>, <a href=\"http://www.codechef.com/download/translated/NOV20/bengali/RESTORE.pdf\">Bengali</a>, <a href=\"http://www.codechef.com/download/translated/NOV20/mandarin/RESTORE.pdf\">Mandarin Chinese</a>, <a href=\"http://www.codechef.com/download/translated/NOV20/russian/RESTORE.pdf\">Russian</a>, and <a href=\"http://www.codechef.com/download/translated/NOV20/vietnamese/RESTORE.pdf\">Vietnamese</a> as well.</h3>\n<p>Alice has a very complex machine â€• when fed with a sequence $A_1, A_2, \\ldots, A_N$, it produces a sequence $B_1, B_2, \\ldots, B_N$, where for each valid $i$, $B_i$ is the largest index $j$ such that $A_i$ divides $A_j$ (since $A_i$ divides itself, such an index always exist). For example, if the machine is fed with $A = [2, 6, 5, 3, 4]$, it produces $B = [5, 2, 3, 4, 5]$.</p>\n<p>Alice gave you a sequence $B$ that was produced by the machine. Find an integer sequence $A$ such that when it is fed into the machine, then the machine produces the sequence $B$. Alice does not like huge integers, so make sure that $1 \\le A_i \\le 4 \\cdot 10^6$ holds for each valid $i$.</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.</li>\n<li>The first line of each test case contains a single integer $N$.</li>\n<li>The second line contains $N$ space-separated integers $B_1, B_2, \\ldots, B_N$.</li>\n</ul>\n<h3>Output</h3>\n<p>For each test case, print a single line containing $N$ space-separated integers $A_1, A_2, \\ldots, A_N$. For each valid $i$, $1 \\le A_i \\le 4 \\cdot 10^6$ should hold.</p>\n<p>If there are multiple solutions, you may print any of them. It is guaranteed that at least one solution exists.</p>\n<h3>Constraints</h3>\n<ul>\n<li>$1 \\le T \\le 2 \\cdot 10^4$</li>\n<li>$1 \\le N \\le 10^5$</li>\n<li>$1 \\le B_i \\le N$ for each valid $i$</li>\n<li>the sum of $N$ over all test cases does not exceed $2 \\cdot 10^5$</li>\n</ul>\n<h3>Subtasks</h3>\n<p><strong>Subtask #1 (20 points):</strong> $B_1, B_2, \\ldots, B_N$ are pairwise distinct</p>\n<p><strong>Subtask #2 (80 points):</strong> original constraints</p>\n<h3>Example Input</h3>\n<pre><code>2\n5\n5 2 3 4 5\n4\n4 4 4 4\n</code></pre>\n<h3>Example Output</h3>\n<pre><code>2 6 5 3 4\n2 6 3 12\n</code></pre>\n\n\t<body>\n</html>"}}}