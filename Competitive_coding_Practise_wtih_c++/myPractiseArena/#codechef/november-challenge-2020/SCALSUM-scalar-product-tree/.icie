{"task_url":"https://www.codechef.com/NOV20B/problems/SCALSUM","statement":{"HTML":{"html":"\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css\">\n\t\t<script type=\"text/x-mathjax-config\">\n\t\t\tMathJax.Hub.Config({\n\t\t\t\ttex2jax: {inlineMath: [['$','$']]}\n\t\t\t});\n\t\t</script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n\t\t<style>\n\t\t\t.markdown-body {\n\t\t\t\tbackground-color: white;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t}\n\t\t\t.markdown-body code {\n\t\t\t\tcolor: #24292e;\n\t\t\t}\n\t\t\t.solution-visible-txt {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body class=\"markdown-body\">\n\t\t<h1>Scalar Product Tree</h1>\n<h3>Read problem statements in <a href=\"http://www.codechef.com/download/translated/NOV20/hindi/SCALSUM.pdf\">Hindi</a>, <a href=\"http://www.codechef.com/download/translated/NOV20/bengali/SCALSUM.pdf\">Bengali</a>, <a href=\"http://www.codechef.com/download/translated/NOV20/mandarin/SCALSUM.pdf\">Mandarin Chinese</a>, <a href=\"http://www.codechef.com/download/translated/NOV20/russian/SCALSUM.pdf\">Russian</a>, and <a href=\"http://www.codechef.com/download/translated/NOV20/vietnamese/SCALSUM.pdf\">Vietnamese</a> as well.</h3>\n<p>Chef has a tree with $N$ vertices (numbered $1$ through $N$). The tree is rooted at the vertex $1$. For each valid $i$, the weight of the $i$-th vertex is $w_i$.</p>\n<p>For a vertex $u$ with depth $d$ (the root has depth $1$), let's denote the sequence of vertices on the path from $u$ to the root by $(v_1, v_2, \\ldots, v_d)$, where $v_1 = u$ and $v_d = 1$. Then, let $F_u$ be the vector (i.e. sequence) $(w_{v_1}, w_{v_2}, \\ldots, w_{v_d})$, where the $i$-th element is $F_{u, i} = w_{v_i}$ for each valid $i$.</p>\n<p>For any two vertices $u$ and $v$ with the same depth $d$, let's define the <a href=\"https://en.wikipedia.org/wiki/Dot_product\">dot product</a> $F_u \\cdot F_v = \\sum_{i=1}^d F_{u,i} \\cdot F_{v,i}$.</p>\n<p>Your task is to answer $Q$ queries. In each query, you are given two vertices $u$ and $v$ with the same depth, and you should find $F_u \\cdot F_v$. Since the dot product can be large, compute it modulo $2^{32}$.</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains two space-separated integers $N$ and $Q$.</li>\n<li>The second line contains $N$ space-separated integers $w_1, w_2, \\ldots, w_N$.</li>\n<li>Each of the next $N-1$ lines contains two space-separated integers $u$ and $v$ denoting that vertices $u$ and $v$ are connected by an edge.</li>\n<li>$Q$ lines follow. Each of these lines contains two space-separated integers $u$ and $v$ describing a query.</li>\n</ul>\n<h3>Output</h3>\n<p>For each query, print a single line containing one integer $F_u \\cdot F_v$ modulo $2^{32}$.</p>\n<h3>Constraints</h3>\n<ul>\n<li>$1 \\le N, Q \\le 3 \\cdot 10^5$</li>\n<li>$1 \\le w_i \\le 10^9$ for each valid $i$</li>\n<li>$1 \\le u, v \\le N$</li>\n<li>in each query, $u$ and $v$ have the same depth</li>\n</ul>\n<h3>Subtasks</h3>\n<p><strong>Subtask #1 (15 points, time limit 1 second):</strong> $N, Q \\le 1,000$</p>\n<p><strong>Subtask #2 (45 points, time limit 2 seconds):</strong> $N, Q \\le 10^5$</p>\n<p><strong>Subtask #3 (40 points, time limit 3.5 seconds):</strong> original constraints</p>\n<h3>Example Input</h3>\n<pre><code>5 2\n5 4 3 2 1\n1 2\n1 3\n2 4\n2 5\n2 3\n4 5\n</code></pre>\n<h3>Example Output</h3>\n<pre><code>37\n43\n</code></pre>\n<h3>Explanation</h3>\n<p><img src=\"https://codechef_shared.s3.amazonaws.com/download/Images/NOV20/SCALSUM/SCALSUM.png\" alt=\"\" /></p>\n<p>In the first query, $F_2 = (4,5)$ and $F_3 = (3,5)$, so the scalar product is $4 \\cdot 3 + 5 \\cdot 5 = 37$.</p>\n<p>In the second query, $F_4 = (2,4,5)$ and $F_5 = (1,4,5)$, so the scalar product is $2 \\cdot 1 + 4 \\cdot 4 + 5 \\cdot 5 = 43$. </p>\n\n\t<body>\n</html>"}}}