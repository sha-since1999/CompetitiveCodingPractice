{"task_url":"https://www.codechef.com/NOV20B/problems/CNDYGAME","statement":{"HTML":{"html":"\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css\">\n\t\t<script type=\"text/x-mathjax-config\">\n\t\t\tMathJax.Hub.Config({\n\t\t\t\ttex2jax: {inlineMath: [['$','$']]}\n\t\t\t});\n\t\t</script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n\t\t<style>\n\t\t\t.markdown-body {\n\t\t\t\tbackground-color: white;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t}\n\t\t\t.markdown-body code {\n\t\t\t\tcolor: #24292e;\n\t\t\t}\n\t\t\t.solution-visible-txt {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body class=\"markdown-body\">\n\t\t<h1>Magical Candy Store</h1>\n<h3>Read problem statements in <a href=\"http://www.codechef.com/download/translated/NOV20/hindi/CNDYGAME.pdf\">Hindi</a>, <a href=\"http://www.codechef.com/download/translated/NOV20/bengali/CNDYGAME.pdf\">Bengali</a>, <a href=\"http://www.codechef.com/download/translated/NOV20/mandarin/CNDYGAME.pdf\">Mandarin Chinese</a>, <a href=\"http://www.codechef.com/download/translated/NOV20/russian/CNDYGAME.pdf\">Russian</a>, and <a href=\"http://www.codechef.com/download/translated/NOV20/vietnamese/CNDYGAME.pdf\">Vietnamese</a> as well.</h3>\n<p>Chef and Chefu are at a magical candy store playing a game with the following rules:</p>\n<ul>\n<li>There are two candy counters; each of them stores an infinite number of candies. At any time, only one of the counters is open and the other is closed.</li>\n<li>Exactly one player is present at each of the counters. Initially, Chef is at the open counter and Chefu is at the closed counter.</li>\n<li>There is a sequence of $N$ <strong>distinct</strong> integers $A_1, A_2, \\ldots, A_N$. The game consists of $R$ turns; in the $i$-th turn, the open counter offers only $C = A_{ (i-1) % N + 1}$ candies to the player present at this counter. This player should choose a positive number of candies $M$ to accept, where $1 \\le M \\le C$.</li>\n<li>If this player accepts an odd number of candies, the players have to swap their positions (each player goes to the other counter).</li>\n<li>After each $N$ turns, the counter which was currently open is closed and the counter which was currently closed is opened.</li>\n<li>The primary goal of each player is to maximise his own number of candies after $R$ turns. As a second priority, each player wants to minimise the number of candies his opponent has after $R$ turns.</li>\n</ul>\n<p>You should process $Q$ queries. In each query, you are given $R$ and you should find the number of candies Chef has after $R$ turns, assuming that both players play the game optimally. Since this number could be very large, compute it modulo $10^9 + 7$.</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.</li>\n<li>The first line of each test case contains a single integer $N$.</li>\n<li>The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.</li>\n<li>The third line contains a single integer $Q$.</li>\n<li>Each of the next $Q$ lines contains a single integer $R$ describing a query.</li>\n</ul>\n<h3>Output</h3>\n<p>For each query, print a single line containing one integer â€• the maximum number of candies Chef can get, modulo $10^9+7$.</p>\n<h3>Constraints</h3>\n<ul>\n<li>$1 \\le T \\le 25$</li>\n<li>$1 \\le N \\le 10^5$</li>\n<li>$1 \\le A_i \\le 10^9$ for each valid $i$</li>\n<li>$A_1, A_2, \\ldots, A_N$ are pairwise distinct</li>\n<li>$1 \\le Q \\le 10^5$</li>\n<li>$1 \\le R \\le 10^{12}$</li>\n<li>the sum of $N + Q$ over all test cases does not exceed $10^6$</li>\n</ul>\n<h3>Subtasks</h3>\n<p><strong>Subtask #1 (15 points):</strong></p>\n<ul>\n<li>$N \\le 10$</li>\n<li>$Q \\le 35$</li>\n<li>$R \\le 35$</li>\n</ul>\n<p><strong>Subtask #2 (85 points):</strong> original constraints</p>\n<h3>Example Input</h3>\n<pre><code>1\n4\n4 10 2 1\n2\n4\n5\n</code></pre>\n<h3>Example Output</h3>\n<pre><code>17\n21\n</code></pre>\n<h3>Explanation</h3>\n<p><strong>Example case 1:</strong> In the $1$-st, $2$-nd and $3$-rd turn, Chef takes $4$, $10$ and $2$ candies ($16$ in total) respectively. In the $4$-th turn, Chef takes $1$ candy ($17$ in total; this is the answer to the first query), which is odd and hence he has to go to the counter which is closed. However, since $N = 4$ turns are just completed, the counter which was currently open closes and the other one (where Chef went) opens. In the $5$-th round, Chef can take $4$ candies, so he has $21$ candies. </p>\n\n\t<body>\n</html>"}}}