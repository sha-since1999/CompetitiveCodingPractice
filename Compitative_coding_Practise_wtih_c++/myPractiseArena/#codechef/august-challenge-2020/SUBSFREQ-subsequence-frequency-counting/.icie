{"task_url":"https://www.codechef.com/AUG20B/problems/SUBSFREQ","statement":{"HTML":{"html":"\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css\">\n\t\t<script type=\"text/x-mathjax-config\">\n\t\t\tMathJax.Hub.Config({\n\t\t\t\ttex2jax: {inlineMath: [['$','$']]}\n\t\t\t});\n\t\t</script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n\t\t<style>\n\t\t\t.markdown-body {\n\t\t\t\tbackground-color: white;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t}\n\t\t\t.markdown-body code {\n\t\t\t\tcolor: #24292e;\n\t\t\t}\n\t\t\t.solution-visible-txt {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body class=\"markdown-body\">\n\t\t<h1>Subsequence Frequency Counting</h1>\n<h3>Read problem statements in <a href=\"http://www.codechef.com/download/translated/AUG20/hindi/SUBSFREQ.pdf\">Hindi</a>, <a href=\"http://www.codechef.com/download/translated/AUG20/bengali/SUBSFREQ.pdf\">Bengali</a>, <a href=\"http://www.codechef.com/download/translated/AUG20/mandarin/SUBSFREQ.pdf\">Mandarin Chinese</a>, <a href=\"http://www.codechef.com/download/translated/AUG20/russian/SUBSFREQ.pdf\">Russian</a>, and <a href=\"http://www.codechef.com/download/translated/AUG20/vietnamese/SUBSFREQ.pdf\">Vietnamese</a> as well.</h3>\n<p>Chef has a sequence of integers $A_1, A_2, \\ldots, A_N$. He takes a sheet of paper and for each non-empty subsequence $B$ of this sequence, he does the following:</p>\n<ol>\n<li>For each integer which appears in $B$, count its number of occurrences in the sequence $B$.</li>\n<li>Choose the integer with the largest number of occurrences. If there are several options, choose the smallest one.</li>\n<li>Finally, write down the chosen integer (an element of $B$) on the sheet of paper.</li>\n</ol>\n<p>For each integer between $1$ and $N$ inclusive, find out how many times it appears on Chef's sheet of paper. Since these numbers may be very large, compute them modulo $1,000,000,007$ ($10^9 + 7$).</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.</li>\n<li>The first line of each test case contains a single integer $N$.</li>\n<li>The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.</li>\n</ul>\n<h3>Output</h3>\n<p>For each test case, print a single line containing $N$ space-separated integers. For each valid $i$, the $i$-th of these integers should be the number of occurrences of $i$ on Chef's sheet of paper.</p>\n<h3>Constraints</h3>\n<ul>\n<li>$1 \\le T \\le 100$</li>\n<li>$1 \\le A_i \\le N$ for each valid $i$</li>\n<li>the sum of $N$ over all test cases does not exceed $500,000$</li>\n</ul>\n<h3>Subtasks</h3>\n<p><strong>Subtask #1 (20 points):</strong> the sum of $N$ over all test cases does not exceed $5,000$</p>\n<p><strong>Subtask #2 (10 points):</strong> $A_1, A_2, \\ldots, A_N$ is a permutation of the integers $1$ through $N$</p>\n<p><strong>Subtask #3 (70 points):</strong> original constraints</p>\n<h3>Example Input</h3>\n<pre><code>3\n3\n2 2 3\n2\n1 2\n3\n1 2 2\n</code></pre>\n<h3>Example Output</h3>\n<pre><code>0 6 1\n2 1\n3 4 0\n</code></pre>\n<h3>Explanation</h3>\n<p><strong>Example case 3:</strong> There are $7$ non-empty subsequences:</p>\n<ul>\n<li>$[1]$ (Chef writes down $1$)</li>\n<li>$[2]$ (Chef writes down $2$)</li>\n<li>$[2]$ (Chef writes down $2$)</li>\n<li>$[1, 2]$ (Chef writes down $1$)</li>\n<li>$[1, 2]$ (Chef writes down $1$)</li>\n<li>$[2, 2]$ (Chef writes down $2$)</li>\n<li>$[1, 2, 2]$ (Chef writes down $2$)</li>\n</ul>\n\n\t<body>\n</html>"}}}